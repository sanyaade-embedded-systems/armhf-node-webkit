// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is automatically generated.

#ifndef UI_GFX_GL_GL_BINDINGS_AUTOGEN_EGL_H_
#define UI_GFX_GL_GL_BINDINGS_AUTOGEN_EGL_H_

namespace gfx {

class GLContext;


typedef EGLint (GL_BINDING_CALL *eglGetErrorProc)(void);
typedef EGLDisplay (GL_BINDING_CALL *eglGetDisplayProc)(EGLNativeDisplayType display_id);
typedef EGLBoolean (GL_BINDING_CALL *eglInitializeProc)(EGLDisplay dpy, EGLint* major, EGLint* minor);
typedef EGLBoolean (GL_BINDING_CALL *eglTerminateProc)(EGLDisplay dpy);
typedef const char* (GL_BINDING_CALL *eglQueryStringProc)(EGLDisplay dpy, EGLint name);
typedef EGLBoolean (GL_BINDING_CALL *eglGetConfigsProc)(EGLDisplay dpy, EGLConfig* configs, EGLint config_size, EGLint* num_config);
typedef EGLBoolean (GL_BINDING_CALL *eglChooseConfigProc)(EGLDisplay dpy, const EGLint* attrib_list, EGLConfig* configs, EGLint config_size, EGLint* num_config);
typedef EGLBoolean (GL_BINDING_CALL *eglGetConfigAttribProc)(EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint* value);
typedef EGLImageKHR (GL_BINDING_CALL *eglCreateImageKHRProc)(EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint* attrib_list);
typedef EGLBoolean (GL_BINDING_CALL *eglDestroyImageKHRProc)(EGLDisplay dpy, EGLImageKHR image);
typedef EGLSurface (GL_BINDING_CALL *eglCreateWindowSurfaceProc)(EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint* attrib_list);
typedef EGLSurface (GL_BINDING_CALL *eglCreatePbufferSurfaceProc)(EGLDisplay dpy, EGLConfig config, const EGLint* attrib_list);
typedef EGLSurface (GL_BINDING_CALL *eglCreatePixmapSurfaceProc)(EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint* attrib_list);
typedef EGLBoolean (GL_BINDING_CALL *eglDestroySurfaceProc)(EGLDisplay dpy, EGLSurface surface);
typedef EGLBoolean (GL_BINDING_CALL *eglQuerySurfaceProc)(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint* value);
typedef EGLBoolean (GL_BINDING_CALL *eglBindAPIProc)(EGLenum api);
typedef EGLenum (GL_BINDING_CALL *eglQueryAPIProc)(void);
typedef EGLBoolean (GL_BINDING_CALL *eglWaitClientProc)(void);
typedef EGLBoolean (GL_BINDING_CALL *eglReleaseThreadProc)(void);
typedef EGLSurface (GL_BINDING_CALL *eglCreatePbufferFromClientBufferProc)(EGLDisplay dpy, EGLenum buftype, void* buffer, EGLConfig config, const EGLint* attrib_list);
typedef EGLBoolean (GL_BINDING_CALL *eglSurfaceAttribProc)(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value);
typedef EGLBoolean (GL_BINDING_CALL *eglBindTexImageProc)(EGLDisplay dpy, EGLSurface surface, EGLint buffer);
typedef EGLBoolean (GL_BINDING_CALL *eglReleaseTexImageProc)(EGLDisplay dpy, EGLSurface surface, EGLint buffer);
typedef EGLBoolean (GL_BINDING_CALL *eglSwapIntervalProc)(EGLDisplay dpy, EGLint interval);
typedef EGLContext (GL_BINDING_CALL *eglCreateContextProc)(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint* attrib_list);
typedef EGLBoolean (GL_BINDING_CALL *eglDestroyContextProc)(EGLDisplay dpy, EGLContext ctx);
typedef EGLBoolean (GL_BINDING_CALL *eglMakeCurrentProc)(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx);
typedef EGLContext (GL_BINDING_CALL *eglGetCurrentContextProc)(void);
typedef EGLSurface (GL_BINDING_CALL *eglGetCurrentSurfaceProc)(EGLint readdraw);
typedef EGLDisplay (GL_BINDING_CALL *eglGetCurrentDisplayProc)(void);
typedef EGLBoolean (GL_BINDING_CALL *eglQueryContextProc)(EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint* value);
typedef EGLBoolean (GL_BINDING_CALL *eglWaitGLProc)(void);
typedef EGLBoolean (GL_BINDING_CALL *eglWaitNativeProc)(EGLint engine);
typedef EGLBoolean (GL_BINDING_CALL *eglSwapBuffersProc)(EGLDisplay dpy, EGLSurface surface);
typedef EGLBoolean (GL_BINDING_CALL *eglCopyBuffersProc)(EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target);
typedef __eglMustCastToProperFunctionPointerType (GL_BINDING_CALL *eglGetProcAddressProc)(const char* procname);
typedef EGLBoolean (GL_BINDING_CALL *eglPostSubBufferNVProc)(EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height);
typedef EGLBoolean (GL_BINDING_CALL *eglQuerySurfacePointerANGLEProc)(EGLDisplay dpy, EGLSurface surface, EGLint attribute, void** value);
typedef EGLSyncKHR (GL_BINDING_CALL *eglCreateSyncKHRProc)(EGLDisplay dpy, EGLenum type, const EGLint* attrib_list);
typedef EGLint (GL_BINDING_CALL *eglClientWaitSyncKHRProc)(EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout);
typedef EGLBoolean (GL_BINDING_CALL *eglDestroySyncKHRProc)(EGLDisplay dpy, EGLSyncKHR sync);

struct ExtensionsEGL {
  bool b_EGL_ANGLE_query_surface_pointer;
  bool b_EGL_KHR_reusable_sync;
  bool b_EGL_NV_post_sub_buffer;
  bool b_EGL_ANGLE_surface_d3d_texture_2d_share_handle;
  bool b_EGL_KHR_image;
  bool b_EGL_KHR_image_base;
  bool b_EGL_KHR_fence_sync;
  bool b_EGL_ANGLE_d3d_share_handle_client_buffer;
};

struct ProcsEGL {
  eglGetErrorProc eglGetErrorFn;
  eglGetDisplayProc eglGetDisplayFn;
  eglInitializeProc eglInitializeFn;
  eglTerminateProc eglTerminateFn;
  eglQueryStringProc eglQueryStringFn;
  eglGetConfigsProc eglGetConfigsFn;
  eglChooseConfigProc eglChooseConfigFn;
  eglGetConfigAttribProc eglGetConfigAttribFn;
  eglCreateImageKHRProc eglCreateImageKHRFn;
  eglDestroyImageKHRProc eglDestroyImageKHRFn;
  eglCreateWindowSurfaceProc eglCreateWindowSurfaceFn;
  eglCreatePbufferSurfaceProc eglCreatePbufferSurfaceFn;
  eglCreatePixmapSurfaceProc eglCreatePixmapSurfaceFn;
  eglDestroySurfaceProc eglDestroySurfaceFn;
  eglQuerySurfaceProc eglQuerySurfaceFn;
  eglBindAPIProc eglBindAPIFn;
  eglQueryAPIProc eglQueryAPIFn;
  eglWaitClientProc eglWaitClientFn;
  eglReleaseThreadProc eglReleaseThreadFn;
  eglCreatePbufferFromClientBufferProc eglCreatePbufferFromClientBufferFn;
  eglSurfaceAttribProc eglSurfaceAttribFn;
  eglBindTexImageProc eglBindTexImageFn;
  eglReleaseTexImageProc eglReleaseTexImageFn;
  eglSwapIntervalProc eglSwapIntervalFn;
  eglCreateContextProc eglCreateContextFn;
  eglDestroyContextProc eglDestroyContextFn;
  eglMakeCurrentProc eglMakeCurrentFn;
  eglGetCurrentContextProc eglGetCurrentContextFn;
  eglGetCurrentSurfaceProc eglGetCurrentSurfaceFn;
  eglGetCurrentDisplayProc eglGetCurrentDisplayFn;
  eglQueryContextProc eglQueryContextFn;
  eglWaitGLProc eglWaitGLFn;
  eglWaitNativeProc eglWaitNativeFn;
  eglSwapBuffersProc eglSwapBuffersFn;
  eglCopyBuffersProc eglCopyBuffersFn;
  eglGetProcAddressProc eglGetProcAddressFn;
  eglPostSubBufferNVProc eglPostSubBufferNVFn;
  eglQuerySurfacePointerANGLEProc eglQuerySurfacePointerANGLEFn;
  eglCreateSyncKHRProc eglCreateSyncKHRFn;
  eglClientWaitSyncKHRProc eglClientWaitSyncKHRFn;
  eglDestroySyncKHRProc eglDestroySyncKHRFn;
};

struct GL_EXPORT DriverEGL {
  void InitializeBindings();
  void InitializeExtensionBindings(GLContext* context);
  void InitializeDebugBindings();
  void ClearBindings();
  void UpdateDebugExtensionBindings();

  ProcsEGL fn;
  ProcsEGL debug_fn;
  ExtensionsEGL ext;
};

class GL_EXPORT EGLApi {
 public:
  EGLApi();
  virtual ~EGLApi();

  virtual EGLint eglGetErrorFn(void) = 0;
  virtual EGLDisplay eglGetDisplayFn(EGLNativeDisplayType display_id) = 0;
  virtual EGLBoolean eglInitializeFn(EGLDisplay dpy, EGLint* major, EGLint* minor) = 0;
  virtual EGLBoolean eglTerminateFn(EGLDisplay dpy) = 0;
  virtual const char* eglQueryStringFn(EGLDisplay dpy, EGLint name) = 0;
  virtual EGLBoolean eglGetConfigsFn(EGLDisplay dpy, EGLConfig* configs, EGLint config_size, EGLint* num_config) = 0;
  virtual EGLBoolean eglChooseConfigFn(EGLDisplay dpy, const EGLint* attrib_list, EGLConfig* configs, EGLint config_size, EGLint* num_config) = 0;
  virtual EGLBoolean eglGetConfigAttribFn(EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint* value) = 0;
  virtual EGLImageKHR eglCreateImageKHRFn(EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint* attrib_list) = 0;
  virtual EGLBoolean eglDestroyImageKHRFn(EGLDisplay dpy, EGLImageKHR image) = 0;
  virtual EGLSurface eglCreateWindowSurfaceFn(EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint* attrib_list) = 0;
  virtual EGLSurface eglCreatePbufferSurfaceFn(EGLDisplay dpy, EGLConfig config, const EGLint* attrib_list) = 0;
  virtual EGLSurface eglCreatePixmapSurfaceFn(EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint* attrib_list) = 0;
  virtual EGLBoolean eglDestroySurfaceFn(EGLDisplay dpy, EGLSurface surface) = 0;
  virtual EGLBoolean eglQuerySurfaceFn(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint* value) = 0;
  virtual EGLBoolean eglBindAPIFn(EGLenum api) = 0;
  virtual EGLenum eglQueryAPIFn(void) = 0;
  virtual EGLBoolean eglWaitClientFn(void) = 0;
  virtual EGLBoolean eglReleaseThreadFn(void) = 0;
  virtual EGLSurface eglCreatePbufferFromClientBufferFn(EGLDisplay dpy, EGLenum buftype, void* buffer, EGLConfig config, const EGLint* attrib_list) = 0;
  virtual EGLBoolean eglSurfaceAttribFn(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value) = 0;
  virtual EGLBoolean eglBindTexImageFn(EGLDisplay dpy, EGLSurface surface, EGLint buffer) = 0;
  virtual EGLBoolean eglReleaseTexImageFn(EGLDisplay dpy, EGLSurface surface, EGLint buffer) = 0;
  virtual EGLBoolean eglSwapIntervalFn(EGLDisplay dpy, EGLint interval) = 0;
  virtual EGLContext eglCreateContextFn(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint* attrib_list) = 0;
  virtual EGLBoolean eglDestroyContextFn(EGLDisplay dpy, EGLContext ctx) = 0;
  virtual EGLBoolean eglMakeCurrentFn(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx) = 0;
  virtual EGLContext eglGetCurrentContextFn(void) = 0;
  virtual EGLSurface eglGetCurrentSurfaceFn(EGLint readdraw) = 0;
  virtual EGLDisplay eglGetCurrentDisplayFn(void) = 0;
  virtual EGLBoolean eglQueryContextFn(EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint* value) = 0;
  virtual EGLBoolean eglWaitGLFn(void) = 0;
  virtual EGLBoolean eglWaitNativeFn(EGLint engine) = 0;
  virtual EGLBoolean eglSwapBuffersFn(EGLDisplay dpy, EGLSurface surface) = 0;
  virtual EGLBoolean eglCopyBuffersFn(EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target) = 0;
  virtual __eglMustCastToProperFunctionPointerType eglGetProcAddressFn(const char* procname) = 0;
  virtual EGLBoolean eglPostSubBufferNVFn(EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height) = 0;
  virtual EGLBoolean eglQuerySurfacePointerANGLEFn(EGLDisplay dpy, EGLSurface surface, EGLint attribute, void** value) = 0;
  virtual EGLSyncKHR eglCreateSyncKHRFn(EGLDisplay dpy, EGLenum type, const EGLint* attrib_list) = 0;
  virtual EGLint eglClientWaitSyncKHRFn(EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout) = 0;
  virtual EGLBoolean eglDestroySyncKHRFn(EGLDisplay dpy, EGLSyncKHR sync) = 0;
};

}  // namespace gfx

#define eglGetError ::gfx::g_current_egl_context->eglGetErrorFn
#define eglGetDisplay ::gfx::g_current_egl_context->eglGetDisplayFn
#define eglInitialize ::gfx::g_current_egl_context->eglInitializeFn
#define eglTerminate ::gfx::g_current_egl_context->eglTerminateFn
#define eglQueryString ::gfx::g_current_egl_context->eglQueryStringFn
#define eglGetConfigs ::gfx::g_current_egl_context->eglGetConfigsFn
#define eglChooseConfig ::gfx::g_current_egl_context->eglChooseConfigFn
#define eglGetConfigAttrib ::gfx::g_current_egl_context->eglGetConfigAttribFn
#define eglCreateImageKHR ::gfx::g_current_egl_context->eglCreateImageKHRFn
#define eglDestroyImageKHR ::gfx::g_current_egl_context->eglDestroyImageKHRFn
#define eglCreateWindowSurface ::gfx::g_current_egl_context->eglCreateWindowSurfaceFn
#define eglCreatePbufferSurface ::gfx::g_current_egl_context->eglCreatePbufferSurfaceFn
#define eglCreatePixmapSurface ::gfx::g_current_egl_context->eglCreatePixmapSurfaceFn
#define eglDestroySurface ::gfx::g_current_egl_context->eglDestroySurfaceFn
#define eglQuerySurface ::gfx::g_current_egl_context->eglQuerySurfaceFn
#define eglBindAPI ::gfx::g_current_egl_context->eglBindAPIFn
#define eglQueryAPI ::gfx::g_current_egl_context->eglQueryAPIFn
#define eglWaitClient ::gfx::g_current_egl_context->eglWaitClientFn
#define eglReleaseThread ::gfx::g_current_egl_context->eglReleaseThreadFn
#define eglCreatePbufferFromClientBuffer ::gfx::g_current_egl_context->eglCreatePbufferFromClientBufferFn
#define eglSurfaceAttrib ::gfx::g_current_egl_context->eglSurfaceAttribFn
#define eglBindTexImage ::gfx::g_current_egl_context->eglBindTexImageFn
#define eglReleaseTexImage ::gfx::g_current_egl_context->eglReleaseTexImageFn
#define eglSwapInterval ::gfx::g_current_egl_context->eglSwapIntervalFn
#define eglCreateContext ::gfx::g_current_egl_context->eglCreateContextFn
#define eglDestroyContext ::gfx::g_current_egl_context->eglDestroyContextFn
#define eglMakeCurrent ::gfx::g_current_egl_context->eglMakeCurrentFn
#define eglGetCurrentContext ::gfx::g_current_egl_context->eglGetCurrentContextFn
#define eglGetCurrentSurface ::gfx::g_current_egl_context->eglGetCurrentSurfaceFn
#define eglGetCurrentDisplay ::gfx::g_current_egl_context->eglGetCurrentDisplayFn
#define eglQueryContext ::gfx::g_current_egl_context->eglQueryContextFn
#define eglWaitGL ::gfx::g_current_egl_context->eglWaitGLFn
#define eglWaitNative ::gfx::g_current_egl_context->eglWaitNativeFn
#define eglSwapBuffers ::gfx::g_current_egl_context->eglSwapBuffersFn
#define eglCopyBuffers ::gfx::g_current_egl_context->eglCopyBuffersFn
#define eglGetProcAddress ::gfx::g_current_egl_context->eglGetProcAddressFn
#define eglPostSubBufferNV ::gfx::g_current_egl_context->eglPostSubBufferNVFn
#define eglQuerySurfacePointerANGLE ::gfx::g_current_egl_context->eglQuerySurfacePointerANGLEFn
#define eglCreateSyncKHR ::gfx::g_current_egl_context->eglCreateSyncKHRFn
#define eglClientWaitSyncKHR ::gfx::g_current_egl_context->eglClientWaitSyncKHRFn
#define eglDestroySyncKHR ::gfx::g_current_egl_context->eglDestroySyncKHRFn

#endif  //  UI_GFX_GL_GL_BINDINGS_AUTOGEN_EGL_H_
