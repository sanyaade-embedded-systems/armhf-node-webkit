// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is automatically generated.

  MOCK_METHOD3(XWaitVideoSyncSGI, int(int divisor, int remainder, unsigned int* count));
  MOCK_METHOD3(XChooseVisual, XVisualInfo*(Display* dpy, int screen, int* attribList));
  MOCK_METHOD6(XCopySubBufferMESA, void(Display* dpy, GLXDrawable drawable, int x, int y, int width, int height));
  MOCK_METHOD4(XCreateContext, GLXContext(Display* dpy, XVisualInfo* vis, GLXContext shareList, int direct));
  MOCK_METHOD4(XBindTexImageEXT, void(Display* dpy, GLXDrawable drawable, int buffer, int* attribList));
  MOCK_METHOD3(XReleaseTexImageEXT, void(Display* dpy, GLXDrawable drawable, int buffer));
  MOCK_METHOD2(XDestroyContext, void(Display* dpy, GLXContext ctx));
  MOCK_METHOD3(XMakeCurrent, int(Display* dpy, GLXDrawable drawable, GLXContext ctx));
  MOCK_METHOD4(XCopyContext, void(Display* dpy, GLXContext src, GLXContext dst, unsigned long mask));
  MOCK_METHOD2(XSwapBuffers, void(Display* dpy, GLXDrawable drawable));
  MOCK_METHOD3(XCreateGLXPixmap, GLXPixmap(Display* dpy, XVisualInfo* visual, Pixmap pixmap));
  MOCK_METHOD2(XDestroyGLXPixmap, void(Display* dpy, GLXPixmap pixmap));
  MOCK_METHOD3(XQueryExtension, int(Display* dpy, int* errorb, int* event));
  MOCK_METHOD3(XQueryVersion, int(Display* dpy, int* maj, int* min));
  MOCK_METHOD2(XIsDirect, int(Display* dpy, GLXContext ctx));
  MOCK_METHOD4(XGetConfig, int(Display* dpy, XVisualInfo* visual, int attrib, int* value));
  MOCK_METHOD0(XGetCurrentContext, GLXContext());
  MOCK_METHOD0(XGetCurrentDrawable, GLXDrawable());
  MOCK_METHOD0(XWaitGL, void());
  MOCK_METHOD0(XWaitX, void());
  MOCK_METHOD4(XUseXFont, void(Font font, int first, int count, int list));
  MOCK_METHOD2(XQueryExtensionsString, const char*(Display* dpy, int screen));
  MOCK_METHOD3(XQueryServerString, const char*(Display* dpy, int screen, int name));
  MOCK_METHOD2(XGetClientString, const char*(Display* dpy, int name));
  MOCK_METHOD0(XGetCurrentDisplay, Display*());
  MOCK_METHOD4(XChooseFBConfig, GLXFBConfig*(Display* dpy, int screen, const int* attribList, int* nitems));
  MOCK_METHOD4(XGetFBConfigAttrib, int(Display* dpy, GLXFBConfig config, int attribute, int* value));
  MOCK_METHOD3(XGetFBConfigs, GLXFBConfig*(Display* dpy, int screen, int* nelements));
  MOCK_METHOD2(XGetVisualFromFBConfig, XVisualInfo*(Display* dpy, GLXFBConfig config));
  MOCK_METHOD4(XCreateWindow, GLXWindow(Display* dpy, GLXFBConfig config, Window win, const int* attribList));
  MOCK_METHOD2(XDestroyWindow, void(Display* dpy, GLXWindow window));
  MOCK_METHOD4(XCreatePixmap, GLXPixmap(Display* dpy, GLXFBConfig config, Pixmap pixmap, const int* attribList));
  MOCK_METHOD2(XDestroyPixmap, void(Display* dpy, GLXPixmap pixmap));
  MOCK_METHOD3(XCreatePbuffer, GLXPbuffer(Display* dpy, GLXFBConfig config, const int* attribList));
  MOCK_METHOD2(XDestroyPbuffer, void(Display* dpy, GLXPbuffer pbuf));
  MOCK_METHOD4(XQueryDrawable, void(Display* dpy, GLXDrawable draw, int attribute, unsigned int* value));
  MOCK_METHOD5(XCreateNewContext, GLXContext(Display* dpy, GLXFBConfig config, int renderType, GLXContext shareList, int direct));
  MOCK_METHOD4(XMakeContextCurrent, int(Display* dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx));
  MOCK_METHOD0(XGetCurrentReadDrawable, GLXDrawable());
  MOCK_METHOD4(XQueryContext, int(Display* dpy, GLXContext ctx, int attribute, int* value));
  MOCK_METHOD3(XSelectEvent, void(Display* dpy, GLXDrawable drawable, unsigned long mask));
  MOCK_METHOD3(XGetSelectedEvent, void(Display* dpy, GLXDrawable drawable, unsigned long* mask));
  MOCK_METHOD1(XSwapIntervalMESA, void(unsigned int interval));
  MOCK_METHOD3(XSwapIntervalEXT, void(Display* dpy, GLXDrawable drawable, int interval));
  MOCK_METHOD2(XGetFBConfigFromVisualSGIX, GLXFBConfig(Display* dpy, XVisualInfo* visualInfo));
  MOCK_METHOD5(XCreateContextAttribsARB, GLXContext(Display* dpy, GLXFBConfig config, GLXContext share_context, int direct, const int* attrib_list));
  MOCK_METHOD5(XGetSyncValuesOML, bool(Display* dpy, GLXDrawable drawable, int64* ust, int64* msc, int64* sbc));
  MOCK_METHOD4(XGetMscRateOML, bool(Display* dpy, GLXDrawable drawable, int32* numerator, int32* denominator));

