defines = -DANGLE_DISABLE_TRACE $
    -DANGLE_COMPILE_OPTIMIZATION_LEVEL=D3DCOMPILE_OPTIMIZATION_LEVEL0 $
    '-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ L"d3dcompiler_46.dll", $
    L"d3dcompiler_43.dll" }' -D_FILE_OFFSET_BITS=64 -DCHROMIUM_BUILD $
    -DUSE_DEFAULT_RENDER_THEME=1 -DUSE_LIBJPEG_TURBO=1 -DUSE_NSS=1 $
    -DENABLE_ONE_CLICK_SIGNIN -DGTK_DISABLE_SINGLE_INCLUDES=1 $
    -DENABLE_REMOTING=1 -DENABLE_WEBRTC=1 -DUSE_PROPRIETARY_CODECS $
    -DENABLE_PEPPER_THREADING -DENABLE_CONFIGURATION_POLICY $
    -DENABLE_INPUT_SPEECH -DENABLE_NOTIFICATIONS -DENABLE_GPU=1 $
    -DENABLE_EGLIMAGE=1 -DUSE_SKIA=1 -DENABLE_TASK_MANAGER=1 $
    -DENABLE_WEB_INTENTS=1 -DENABLE_EXTENSIONS=1 $
    -DENABLE_PLUGIN_INSTALLATION=1 -DENABLE_PLUGINS=1 $
    -DENABLE_SESSION_SERVICE=1 -DENABLE_THEMES=1 -DENABLE_BACKGROUND=1 $
    -DENABLE_AUTOMATION=1 -DENABLE_GOOGLE_NOW=1 $
    -DENABLE_LANGUAGE_DETECTION=1 -DENABLE_PRINTING=1 $
    -DENABLE_CAPTIVE_PORTAL_DETECTION=1 -DNDEBUG -DNVALGRIND $
    -DDYNAMIC_ANNOTATIONS_ENABLED=0 -DUSE_EABI_HARDFLOAT
includes = 
cflags = -fstack-protector --param=ssp-buffer-size=4 -pthread $
    -fno-exceptions -fno-strict-aliasing -Wno-unused-parameter $
    -Wno-missing-field-initializers -fvisibility=hidden -pipe -fPIC $
    -Wno-format -Wno-unused-result -march=armv7-a -mtune=cortex-a8 $
    -mfloat-abi=hard -mfpu=neon -O2 -fno-ident -fdata-sections $
    -ffunction-sections
cflags_c = 
cflags_cc = -fno-rtti -fno-threadsafe-statics -fvisibility-inlines-hidden $
    -Wno-deprecated -Wno-abi

build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.diagnosticsbase.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/DiagnosticsBase.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.directivehandlerbase.o: $
    cxx $
    ../../third_party/angle/src/compiler/preprocessor/DirectiveHandlerBase.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.directiveparser.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/DirectiveParser.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.expressionparser.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/ExpressionParser.cpp
build obj/third_party/angle/src/compiler/preprocessor/preprocessor.input.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Input.cpp
build obj/third_party/angle/src/compiler/preprocessor/preprocessor.lexer.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Lexer.cpp
build obj/third_party/angle/src/compiler/preprocessor/preprocessor.macro.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Macro.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.macroexpander.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/MacroExpander.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.preprocessor.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Preprocessor.cpp
build obj/third_party/angle/src/compiler/preprocessor/preprocessor.token.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Token.cpp
build $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.tokenizer.o: $
    cxx ../../third_party/angle/src/compiler/preprocessor/Tokenizer.cpp

build obj/third_party/angle/src/libpreprocessor.a: alink_thin $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.diagnosticsbase.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.directivehandlerbase.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.directiveparser.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.expressionparser.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.input.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.lexer.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.macro.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.macroexpander.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.preprocessor.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.token.o $
    obj/third_party/angle/src/compiler/preprocessor/preprocessor.tokenizer.o
